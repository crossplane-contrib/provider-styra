// +build !ignore_autogenerated

/*
Copyright 2021 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	models "github.com/mistermx/styra-go-client/pkg/models"
)

// DeepCopyToModelInto is an autogenerated DeepCopyToModel function, copying the receiver, writing into out. in must be non-nil.
func (in *V1EnforcementConfig) DeepCopyToModelInto(out *models.V1EnforcementConfig) {
	*out = models.V1EnforcementConfig{}
}

// DeepCopyToModel is an autogenerated DeepCopyToModel function, copying the receiver, creating a new models.V1EnforcementConfig.
func (in *V1EnforcementConfig) DeepCopyToModel() *models.V1EnforcementConfig {
	if in == nil {
		return nil
	}
	out := new(models.V1EnforcementConfig)
	in.DeepCopyToModelInto(out)
	return out
}

// DeepCopyToModelInto is an autogenerated DeepCopyToModel function, copying the receiver, writing into out. in must be non-nil.
func (in *V1GitRepoConfig) DeepCopyToModelInto(out *models.V1GitRepoConfig) {
	*out = models.V1GitRepoConfig{}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Reference != nil {
		in, out := &in.Reference, &out.Reference
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopyToModel is an autogenerated DeepCopyToModel function, copying the receiver, creating a new models.V1GitRepoConfig.
func (in *V1GitRepoConfig) DeepCopyToModel() *models.V1GitRepoConfig {
	if in == nil {
		return nil
	}
	out := new(models.V1GitRepoConfig)
	in.DeepCopyToModelInto(out)
	return out
}

// DeepCopyToModelInto is an autogenerated DeepCopyToModel function, copying the receiver, writing into out. in must be non-nil.
func (in *V1Module) DeepCopyToModelInto(out *models.V1Module) {
	*out = models.V1Module{}
	if in.Placeholder != nil {
		in, out := &in.Placeholder, &out.Placeholder
		*out = new(bool)
		**out = **in
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = new(models.V1RuleCounts)
		**out = *(**in).DeepCopyToModel()
	}
}

// DeepCopyToModel is an autogenerated DeepCopyToModel function, copying the receiver, creating a new models.V1Module.
func (in *V1Module) DeepCopyToModel() *models.V1Module {
	if in == nil {
		return nil
	}
	out := new(models.V1Module)
	in.DeepCopyToModelInto(out)
	return out
}

// DeepCopyToModelInto is an autogenerated DeepCopyToModel function, copying the receiver, writing into out. in must be non-nil.
func (in *V1PolicyConfig) DeepCopyToModelInto(out *models.V1PolicyConfig) {
	*out = models.V1PolicyConfig{}
	if in.Enforcement != nil {
		in, out := &in.Enforcement, &out.Enforcement
		*out = new(models.V1EnforcementConfig)
		**out = *(**in).DeepCopyToModel()
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Modules != nil {
		in, out := &in.Modules, &out.Modules
		*out = make([]*models.V1Module, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(models.V1Module)
				(*in).DeepCopyToModelInto(*out)
			}
		}
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = new(models.V1RuleCounts)
		**out = *(**in).DeepCopyToModel()
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopyToModel is an autogenerated DeepCopyToModel function, copying the receiver, creating a new models.V1PolicyConfig.
func (in *V1PolicyConfig) DeepCopyToModel() *models.V1PolicyConfig {
	if in == nil {
		return nil
	}
	out := new(models.V1PolicyConfig)
	in.DeepCopyToModelInto(out)
	return out
}

// DeepCopyToModelInto is an autogenerated DeepCopyToModel function, copying the receiver, writing into out. in must be non-nil.
func (in *V1RuleCounts) DeepCopyToModelInto(out *models.V1RuleCounts) {
	out.Allow = in.Allow
	out.Deny = in.Deny
	out.Ignore = in.Ignore
	out.Monitor = in.Monitor
	out.Notify = in.Notify
	out.Other = in.Other
	out.Test = in.Test
	out.Total = in.Total
}

// DeepCopyToModel is an autogenerated DeepCopyToModel function, copying the receiver, creating a new models.V1RuleCounts.
func (in *V1RuleCounts) DeepCopyToModel() *models.V1RuleCounts {
	if in == nil {
		return nil
	}
	out := new(models.V1RuleCounts)
	in.DeepCopyToModelInto(out)
	return out
}

// DeepCopyToModelInto is an autogenerated DeepCopyToModel function, copying the receiver, writing into out. in must be non-nil.
func (in *V1SourceControlConfig) DeepCopyToModelInto(out *models.V1SourceControlConfig) {
	*out = models.V1SourceControlConfig{}
	if in.Origin != nil {
		in, out := &in.Origin, &out.Origin
		*out = new(models.V1GitRepoConfig)
		(*in).DeepCopyToModelInto(*out)
	}
}

// DeepCopyToModel is an autogenerated DeepCopyToModel function, copying the receiver, creating a new models.V1SourceControlConfig.
func (in *V1SourceControlConfig) DeepCopyToModel() *models.V1SourceControlConfig {
	if in == nil {
		return nil
	}
	out := new(models.V1SourceControlConfig)
	in.DeepCopyToModelInto(out)
	return out
}
